{"ast":null,"code":"var _jsxFileName = \"/Users/yh/_project/w_station/w_station_web/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport ROSLIB from 'roslib';\nimport { connectROS } from './utils/ros';\nimport Switch from './components/Switch';\nimport { drawConveyor, drawDestinationBox, drawIrSensor, drawLift, drawLiftStatus, drawElevatorBox, drawJames } from './utils/draw';\nimport { Button, ButtonGroup, CustomInput } from 'reactstrap';\nimport { AppContainer, CanvasContainer, ContentsContainer, Canvas, CameraImage, Contents, CameraContainer, ButtonContainer, ButtonTitle, Title, TitleContainer, CustomButtonGroup } from './utils/styles';\nimport { manual } from 'mkdirp'; // get video from this address\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CAMERA_ADDRESS = \"http://0.0.0.0:8080/stream?topic=/usb_cam/image_raw&quality=70\";\nconst CANVAS_WIDTH = 900;\nconst CANVAS_HEIGHT = 600; // canvas lift starting point (left, bottom)\n\nconst startPoint = {\n  x: 130,\n  y: 500\n};\n\nfunction App() {\n  _s();\n\n  // ROSLIB Object\n  let rosWS = useRef(null); // Canvas Ref\n\n  const canvasRef = useRef(null);\n  const [itemStatus, setItemStatus] = useState([[0, 0, 1, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 0, 0]]);\n  const [liftDestinationFloor, setLiftDestinationFloor] = useState(-1);\n  const [liftCurrentFloor, setLiftCurrentFloor] = useState(2);\n  const [pushItemToLift, setPushItemToLift] = useState(false);\n  const [liftState, setLiftState] = useState(\"arrived\");\n  const [liftItemState, setLiftItemState] = useState(false);\n  const [liftItemSize, setLiftItemSize] = useState(\"none\");\n  const [sendToDestination, setSendToDestination] = useState(\"none\");\n  const [james, setJames] = useState(true);\n  const [irSensor, setIrSensor] = useState(false);\n  const [emergencyStatus, setEmergencyStatus] = useState(false);\n  const [manualStatus, setManualStatus] = useState(false);\n  const [width, setWidth] = useState(900);\n  const [height, setHeight] = useState(600);\n  useEffect(async () => {\n    // Connect ros websocket\n    const rosObj = await connectROS(rosWS);\n    rosObj.EmergencyTopic.subscribe(function (message) {\n      console.log(message.data);\n      setEmergencyStatus(message.data);\n    });\n    rosObj.SendToDestinationTopic.subscribe(function (message) {\n      setSendToDestination(message.data);\n    });\n    rosObj.liftItemSizeTopic.subscribe(function (message) {\n      setLiftItemSize(message.data);\n    });\n    rosObj.liftItemStatusTopic.subscribe(function (message) {\n      setLiftItemState(message.data);\n    });\n    rosObj.liftStatusTopic.subscribe(function (message) {\n      setLiftState(message.data);\n    });\n    rosObj.pushItemToLiftTopic.subscribe(function (message) {\n      setPushItemToLift(message.data);\n    });\n    rosObj.liftCurrentFloorTopic.subscribe(function (message) {\n      setLiftCurrentFloor(message.data);\n    });\n    rosObj.liftDestinationFloorTopic.subscribe(function (message) {\n      if (message.data !== liftDestinationFloor) setLiftDestinationFloor(message.data);\n    });\n    rosObj.itemStatus.subscribe(function (message) {\n      setItemStatus(message.data.division(5));\n    });\n    rosObj.manualTopic.subscribe(function (message) {\n      setManualStatus(message.data);\n    });\n    rosObj.liftirTopic.subscribe(function (message) {\n      setIrSensor(message.data);\n    });\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\"); // initializing canvas when draw, redraw\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Redraw Canvas\n\n    drawCanvas(ctx);\n  }, []); // Redraw when states changed\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    drawCanvas(ctx);\n  }, [liftCurrentFloor, liftDestinationFloor, liftItemSize, itemStatus, liftState, liftItemSize, irSensor]); // Publish when Button onClick\n\n  const sendMessage = async (data, name, type) => {\n    let pr = new Promise((resolve, reject) => {\n      let topic = new ROSLIB.Topic({\n        ros: rosWS.current,\n        name: name,\n        messageType: type\n      });\n      resolve(topic);\n    });\n    let topic = await pr;\n    let message_status = new ROSLIB.Message({\n      data: data\n    });\n    topic.publish(message_status);\n  };\n\n  const sendMessageThree = async (data1, name1, type1, data2, name2, type2, data3, name3, type3) => {\n    let pr1 = new Promise((resolve, reject) => {\n      let topic1 = new ROSLIB.Topic({\n        ros: rosWS.current,\n        name: name1,\n        messageType: type1\n      });\n      resolve(topic1);\n    });\n    let topic1 = await pr1;\n    let message_status1 = new ROSLIB.Message({\n      data: data1\n    });\n    topic1.publish(message_status1);\n    let pr2 = new Promise((resolve, reject) => {\n      let topic2 = new ROSLIB.Topic({\n        ros: rosWS.current,\n        name: name2,\n        messageType: type2\n      });\n      resolve(topic2);\n    });\n    let topic2 = await pr2;\n    let message_status2 = new ROSLIB.Message({\n      data: data2\n    });\n    topic2.publish(message_status2);\n    let pr3 = new Promise((resolve, reject) => {\n      let topic3 = new ROSLIB.Topic({\n        ros: rosWS.current,\n        name: name3,\n        messageType: type3\n      });\n      resolve(topic3);\n    });\n    let topic3 = await pr3;\n    let message_status3 = new ROSLIB.Message({\n      data: data3\n    });\n    topic3.publish(message_status3);\n  };\n\n  const drawCanvas = ctx => {\n    ctx.clearRect(0, 0, width, height);\n    drawConveyor(ctx, startPoint, itemStatus);\n    drawElevatorBox(ctx, startPoint);\n    drawDestinationBox(ctx, startPoint, liftDestinationFloor);\n    drawIrSensor(ctx, startPoint, liftCurrentFloor, irSensor);\n    drawLiftStatus(ctx, startPoint, liftCurrentFloor, liftState);\n    drawLift(ctx, startPoint, liftCurrentFloor, liftItemState);\n    drawJames(ctx, startPoint);\n  }; // Render\n\n\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CanvasContainer, {\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContentsContainer, {\n      children: /*#__PURE__*/_jsxDEV(Contents, {\n        children: [/*#__PURE__*/_jsxDEV(CameraContainer, {\n          children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              children: [\"Camera | ItemStatus : \", liftItemSize.toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CameraImage, {\n            src: CAMERA_ADDRESS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              children: [\"Buttons \", emergencyStatus.toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(CustomButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(ButtonTitle, {\n                children: \"Emergency Switch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                children: /*#__PURE__*/_jsxDEV(Switch, {\n                  keyname: \"em\",\n                  isOn: emergencyStatus,\n                  handleToggle: () => sendMessage(!emergencyStatus, '/wstation/emergency', 'std_msgs/Bool')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CustomButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(ButtonTitle, {\n                children: \"Manual Switch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                children: /*#__PURE__*/_jsxDEV(Switch, {\n                  keyname: \"mn\",\n                  isOn: manualStatus,\n                  handleToggle: () => sendMessage(!manualStatus, '/wstation/manual', 'std_msgs/Bool'),\n                  disabled: !emergencyStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonTitle, {\n            children: \"Lift Destination Floor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => sendMessageThree(1, '/wstation/lift_destination_floor', 'std_msgs/Int8', \"none\", '/wstation/send_to_destination', 'std_msgs/String', false, '/wstation/push_item', 'std_msgs/Bool'),\n              disabled: !manualStatus,\n              children: \"1F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => sendMessageThree(2, '/wstation/lift_destination_floor', 'std_msgs/Int8', \"none\", '/wstation/send_to_destination', 'std_msgs/String', false, '/wstation/push_item', 'std_msgs/Bool'),\n              disabled: !manualStatus,\n              children: \"2F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => sendMessageThree(3, '/wstation/lift_destination_floor', 'std_msgs/Int8', \"none\", '/wstation/send_to_destination', 'std_msgs/String', false, '/wstation/push_item', 'std_msgs/Bool'),\n              disabled: !manualStatus,\n              children: \"3F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonTitle, {\n            children: \"Send to Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => sendMessageThree(\"james\", '/wstation/send_to_destination', 'std_msgs/String', -1, '/wstation/lift_destination_floor', 'std_msgs/Int8', false, '/wstation/push_item', 'std_msgs/Bool'),\n              disabled: !manualStatus,\n              children: \"James\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => sendMessageThree(\"tray\", '/wstation/send_to_destination', 'std_msgs/String', -1, '/wstation/lift_destination_floor', 'std_msgs/Int8', false, '/wstation/push_item', 'std_msgs/Bool'),\n              disabled: !manualStatus,\n              children: \"Tray\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonTitle, {\n            children: \"Push Item to Lift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => sendMessageThree(true, '/wstation/push_item', 'std_msgs/Bool', \"none\", '/wstation/send_to_destination', 'std_msgs/String', -1, '/wstation/lift_destination_floor', 'std_msgs/Int8'),\n              disabled: !manualStatus,\n              children: \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => sendMessageThree(false, '/wstation/push_item', 'std_msgs/Bool', \"none\", '/wstation/send_to_destination', 'std_msgs/String', -1, '/wstation/lift_destination_floor', 'std_msgs/Int8'),\n              disabled: !manualStatus,\n              children: \"False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"FYBAVMoucS8Wa1vol6x9IEpe0m0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yh/_project/w_station/w_station_web/src/App.js"],"names":["React","useState","useEffect","useRef","ROSLIB","connectROS","Switch","drawConveyor","drawDestinationBox","drawIrSensor","drawLift","drawLiftStatus","drawElevatorBox","drawJames","Button","ButtonGroup","CustomInput","AppContainer","CanvasContainer","ContentsContainer","Canvas","CameraImage","Contents","CameraContainer","ButtonContainer","ButtonTitle","Title","TitleContainer","CustomButtonGroup","manual","CAMERA_ADDRESS","CANVAS_WIDTH","CANVAS_HEIGHT","startPoint","x","y","App","rosWS","canvasRef","itemStatus","setItemStatus","liftDestinationFloor","setLiftDestinationFloor","liftCurrentFloor","setLiftCurrentFloor","pushItemToLift","setPushItemToLift","liftState","setLiftState","liftItemState","setLiftItemState","liftItemSize","setLiftItemSize","sendToDestination","setSendToDestination","james","setJames","irSensor","setIrSensor","emergencyStatus","setEmergencyStatus","manualStatus","setManualStatus","width","setWidth","height","setHeight","rosObj","EmergencyTopic","subscribe","message","console","log","data","SendToDestinationTopic","liftItemSizeTopic","liftItemStatusTopic","liftStatusTopic","pushItemToLiftTopic","liftCurrentFloorTopic","liftDestinationFloorTopic","division","manualTopic","liftirTopic","canvas","current","ctx","getContext","clearRect","drawCanvas","sendMessage","name","type","pr","Promise","resolve","reject","topic","Topic","ros","messageType","message_status","Message","publish","sendMessageThree","data1","name1","type1","data2","name2","type2","data3","name3","type3","pr1","topic1","message_status1","pr2","topic2","message_status2","pr3","topic3","message_status3","toString"],"mappings":"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","sourcesContent":["import React, { \n    useState, \n    useEffect,\n    useRef \n} from 'react';\n\nimport ROSLIB from 'roslib';\n\nimport { connectROS } from './utils/ros';\nimport Switch from './components/Switch';\nimport { \n    drawConveyor, \n    drawDestinationBox,\n    drawIrSensor,\n    drawLift,\n    drawLiftStatus,\n    drawElevatorBox,\n    drawJames\n} from './utils/draw';\n\nimport { \n    Button, \n    ButtonGroup,\n    CustomInput\n} from 'reactstrap';\n\nimport { \n    AppContainer, \n    CanvasContainer, \n    ContentsContainer, \n    Canvas, \n    CameraImage,\n    Contents,\n    CameraContainer,\n    ButtonContainer,\n    ButtonTitle,\n    Title,\n    TitleContainer,\n    CustomButtonGroup\n} from './utils/styles';\nimport { manual } from 'mkdirp';\n\n// get video from this address\nconst CAMERA_ADDRESS = \"http://0.0.0.0:8080/stream?topic=/usb_cam/image_raw&quality=70\";\n\nconst CANVAS_WIDTH = 900\nconst CANVAS_HEIGHT = 600\n\n// canvas lift starting point (left, bottom)\nconst startPoint = {\n    x: 130,\n    y: 500\n} \n\nfunction App() {\n    // ROSLIB Object\n    let rosWS = useRef(null);\n\n    // Canvas Ref\n    const canvasRef = useRef(null);\n\n    const [itemStatus, setItemStatus] = useState([[0,0,1,0,0], [0,0,0,1,0], [0,0,0,0,0]]);\n    const [liftDestinationFloor, setLiftDestinationFloor] = useState(-1);\n    const [liftCurrentFloor, setLiftCurrentFloor] = useState(2);\n    const [pushItemToLift, setPushItemToLift] = useState(false);\n    const [liftState, setLiftState] = useState(\"arrived\");\n    const [liftItemState, setLiftItemState] = useState(false);\n    const [liftItemSize, setLiftItemSize] = useState(\"none\");\n    const [sendToDestination, setSendToDestination] = useState(\"none\");\n    const [james, setJames] = useState(true);\n    const [irSensor, setIrSensor] = useState(false);\n    const [emergencyStatus, setEmergencyStatus] = useState(false);\n    const [manualStatus, setManualStatus] = useState(false);\n\n    const [width, setWidth] = useState(900);\n    const [height, setHeight] = useState(600);\n\n    useEffect(async () => {\n        // Connect ros websocket\n        const rosObj = await connectROS(rosWS);\n        rosObj.EmergencyTopic.subscribe(function(message) { \n            console.log(message.data);\n            setEmergencyStatus(message.data);\n        })\n        rosObj.SendToDestinationTopic.subscribe(function(message) {\n            setSendToDestination(message.data);\n        });\n        rosObj.liftItemSizeTopic.subscribe(function(message) {\n            setLiftItemSize(message.data);\n        });\n        rosObj.liftItemStatusTopic.subscribe(function(message) {\n            setLiftItemState(message.data);\n        });\n        rosObj.liftStatusTopic.subscribe(function(message) {\n            setLiftState(message.data);\n        });\n        rosObj.pushItemToLiftTopic.subscribe(function(message) {\n            setPushItemToLift(message.data);\n        });\n        rosObj.liftCurrentFloorTopic.subscribe(function(message) {\n            setLiftCurrentFloor(message.data);\n        });\n        rosObj.liftDestinationFloorTopic.subscribe(function(message) {\n            if(message.data !== liftDestinationFloor) setLiftDestinationFloor(message.data);\n        });\n        rosObj.itemStatus.subscribe(function(message) {\n            setItemStatus(message.data.division(5));\n        });\n        rosObj.manualTopic.subscribe(function(message) {\n            setManualStatus(message.data);\n        })\n        rosObj.liftirTopic.subscribe(function(message){\n            setIrSensor(message.data);\n        })\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n    \n        // initializing canvas when draw, redraw\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // Redraw Canvas\n        drawCanvas(ctx);\n    }, []);\n\n    // Redraw when states changed\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        drawCanvas(ctx);\n    }, [liftCurrentFloor, liftDestinationFloor, liftItemSize, itemStatus, liftState, liftItemSize, irSensor]);\n\n    // Publish when Button onClick\n    const sendMessage = async (data, name, type) => {\n        let pr = new Promise((resolve, reject) => {\n            let topic = new ROSLIB.Topic({\n                ros: rosWS.current,\n                name: name,\n                messageType: type\n            })\n            resolve(topic);\n        })\n        let topic = await pr;\n        let message_status = new ROSLIB.Message({\n            data: data\n        });\n        topic.publish(message_status);\n    }\n    const sendMessageThree = async (data1, name1, type1, data2, name2, type2, data3, name3, type3) => {\n        let pr1 = new Promise((resolve, reject) => {\n            let topic1 = new ROSLIB.Topic({\n                ros: rosWS.current,\n                name: name1,\n                messageType: type1\n            })\n            resolve(topic1);\n        })\n        let topic1 = await pr1;\n        let message_status1 = new ROSLIB.Message({\n            data: data1\n        });\n        topic1.publish(message_status1);\n        let pr2 = new Promise((resolve, reject) => {\n            let topic2 = new ROSLIB.Topic({\n                ros: rosWS.current,\n                name: name2,\n                messageType: type2\n            })\n            resolve(topic2);\n        })\n        let topic2 = await pr2;\n        let message_status2 = new ROSLIB.Message({\n            data: data2\n        });\n        topic2.publish(message_status2);\n        let pr3 = new Promise((resolve, reject) => {\n            let topic3 = new ROSLIB.Topic({\n                ros: rosWS.current,\n                name: name3,\n                messageType: type3\n            })\n            resolve(topic3);\n        })\n        let topic3 = await pr3;\n        let message_status3 = new ROSLIB.Message({\n            data: data3\n        });\n        topic3.publish(message_status3);\n    }\n\n    const drawCanvas = (ctx) => {\n        ctx.clearRect(0, 0, width, height);\n        drawConveyor(ctx, startPoint, itemStatus);\n        drawElevatorBox(ctx, startPoint);\n        drawDestinationBox(ctx, startPoint, liftDestinationFloor);\n        drawIrSensor(ctx, startPoint, liftCurrentFloor, irSensor);\n        drawLiftStatus(ctx, startPoint, liftCurrentFloor, liftState);\n        drawLift(ctx, startPoint, liftCurrentFloor, liftItemState);\n        drawJames(ctx, startPoint);\n    }\n\n    // Render\n    return (\n        <AppContainer>\n            <CanvasContainer>\n                <Canvas \n                    ref={canvasRef} \n                    width={CANVAS_WIDTH}\n                    height={CANVAS_HEIGHT}\n                />\n            </CanvasContainer>\n            <ContentsContainer>\n                <Contents>\n                    <CameraContainer>\n                        <TitleContainer>\n                            <Title>Camera | ItemStatus : {liftItemSize.toString()}</Title>\n                        </TitleContainer>\n                        <CameraImage src={CAMERA_ADDRESS}/>\n                    </CameraContainer>\n                    <ButtonContainer>\n                        <TitleContainer>\n                            <Title>Buttons {emergencyStatus.toString()}</Title>\n                        </TitleContainer>\n                        <ButtonGroup>\n                            <CustomButtonGroup>\n                                <ButtonTitle>Emergency Switch</ButtonTitle>\n                                <ButtonGroup>\n                                    <Switch keyname=\"em\" isOn={emergencyStatus} handleToggle={() => sendMessage(!emergencyStatus, '/wstation/emergency', 'std_msgs/Bool')}/>\n                                </ButtonGroup>\n                            </CustomButtonGroup>\n                                \n                            <CustomButtonGroup>\n                                <ButtonTitle>Manual Switch</ButtonTitle>\n                                <ButtonGroup>\n                                    <Switch keyname=\"mn\" isOn={manualStatus} handleToggle={() => sendMessage(!manualStatus, '/wstation/manual', 'std_msgs/Bool')} disabled={!emergencyStatus}/>\n                                </ButtonGroup>\n                            </CustomButtonGroup>\n                        </ButtonGroup>\n                        <ButtonTitle>Lift Destination Floor</ButtonTitle>\n                        <ButtonGroup>\n                            <Button onClick={() => sendMessageThree(1, '/wstation/lift_destination_floor', 'std_msgs/Int8',\n                                                                    \"none\", '/wstation/send_to_destination', 'std_msgs/String',\n                                                                    false, '/wstation/push_item', 'std_msgs/Bool')} \n                                                                    disabled={!manualStatus}>1F</Button>\n                            <Button onClick={() => sendMessageThree(2, '/wstation/lift_destination_floor', 'std_msgs/Int8',\n                                                                    \"none\", '/wstation/send_to_destination', 'std_msgs/String',\n                                                                    false, '/wstation/push_item', 'std_msgs/Bool')} \n                                                                    disabled={!manualStatus}>2F</Button>\n                            <Button onClick={() => sendMessageThree(3, '/wstation/lift_destination_floor', 'std_msgs/Int8',\n                                                                    \"none\", '/wstation/send_to_destination', 'std_msgs/String',\n                                                                    false, '/wstation/push_item', 'std_msgs/Bool')} \n                                                                    disabled={!manualStatus}>3F</Button>\n                        </ButtonGroup>\n                        <ButtonTitle>Send to Destination</ButtonTitle>\n                        <ButtonGroup>\n                            <Button onClick={() => sendMessageThree(\"james\", '/wstation/send_to_destination', 'std_msgs/String', \n                                                                    -1, '/wstation/lift_destination_floor', 'std_msgs/Int8',\n                                                                    false, '/wstation/push_item', 'std_msgs/Bool')} \n                                                                    disabled={!manualStatus}>James</Button>\n                            <Button onClick={() => sendMessageThree(\"tray\", '/wstation/send_to_destination', 'std_msgs/String', \n                                                                    -1, '/wstation/lift_destination_floor', 'std_msgs/Int8',\n                                                                    false, '/wstation/push_item', 'std_msgs/Bool')} \n                                                                    disabled={!manualStatus}>Tray</Button>\n                        </ButtonGroup>\n                        <ButtonTitle>Push Item to Lift</ButtonTitle>\n                        <ButtonGroup>\n                            <Button onClick={() => sendMessageThree(true, '/wstation/push_item', 'std_msgs/Bool',\n                                                                    \"none\", '/wstation/send_to_destination', 'std_msgs/String', \n                                                                    -1, '/wstation/lift_destination_floor', 'std_msgs/Int8',)} \n                                                                    disabled={!manualStatus}>True</Button>\n                            <Button onClick={() => sendMessageThree(false, '/wstation/push_item', 'std_msgs/Bool',\n                                                                    \"none\", '/wstation/send_to_destination', 'std_msgs/String', \n                                                                    -1, '/wstation/lift_destination_floor', 'std_msgs/Int8',)} \n                                                                    disabled={!manualStatus}>False</Button>\n                        </ButtonGroup>\n                    </ButtonContainer>\n                </Contents>\n            </ContentsContainer>\n        </AppContainer>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}