{"ast":null,"code":"// drawing conveyor status (3 * 5)\nexport const drawConveyor = (ctx, startPoint, itemStatus) => {\n  ctx.beginPath();\n  itemStatus.map((floor, i) => {\n    floor.map((item, j) => {\n      item === 0 ? ctx.fillStyle = \"#666666\" : ctx.fillStyle = \"#30A840\";\n      const path = new Path2D();\n      ctx.fillRect(startPoint.x + 150 + j * 85, startPoint.y - 50 - i * 100, 85, 50);\n      path.moveTo(startPoint.x + 150 + j * 85, startPoint.y - i * 100);\n      path.lineTo(startPoint.x + 235 + j * 85, startPoint.y - i * 100);\n      path.lineTo(startPoint.x + 235 + j * 85, startPoint.y - 50 - i * 100);\n      path.lineTo(startPoint.x + 150 + j * 85, startPoint.y - 50 - i * 100);\n      path.lineTo(startPoint.x + 150 + j * 85, startPoint.y - i * 100);\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = \"#cccccc\";\n      path.closePath();\n      ctx.stroke(path);\n    });\n  });\n}; // drawing elevator box\n\nexport const drawElevatorBox = (ctx, startPoint) => {\n  ctx.beginPath();\n  const path = new Path2D();\n  path.moveTo(startPoint.x, startPoint.y);\n  path.lineTo(startPoint.x + 140, startPoint.y);\n  path.lineTo(startPoint.x + 140, startPoint.y - 300);\n  path.lineTo(startPoint.x, startPoint.y - 300);\n  ctx.strokeStyle = \"#cccccc\";\n  path.closePath();\n  ctx.stroke(path);\n}; // drawing lift \n\nexport const drawLift = (ctx, startPoint, liftCurrentFloor, liftItemState) => {\n  const path = new Path2D();\n  path.moveTo(startPoint.x + 20, startPoint.y - (liftCurrentFloor - 1) * 100);\n  path.lineTo(startPoint.x + 120, startPoint.y - (liftCurrentFloor - 1) * 100);\n  path.lineTo(startPoint.x + 120, startPoint.y - 50 - (liftCurrentFloor - 1) * 100);\n  path.lineTo(startPoint.x + 20, startPoint.y - 50 - (liftCurrentFloor - 1) * 100);\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"#cccccc\";\n  console.log(liftItemState);\n  liftItemState ? ctx.fillStyle = \"#30A840\" : ctx.fillStyle = \"#666666\"; // liftItemState === true ? ctx.fillStyle = \"#30A840\" :\n  // liftItemState === false ? ctx.fillStyle = \"#cccccc\" :\n  // liftItemState === \"none\" ? ctx.fillStyle = \"#cccccc\" :\n\n  ctx.fillRect(startPoint.x + 20, startPoint.y - 50 - (liftCurrentFloor - 1) * 100, 100, 50);\n  path.closePath();\n  ctx.stroke(path);\n}; // drawing irSensor\n\nexport const drawIrSensor = (ctx, startPoint, liftCurrentFloor, irSensor) => {\n  const path = new Path2D();\n  path.moveTo(startPoint.x + 120, startPoint.y - (liftCurrentFloor - 1) * 100);\n  path.lineTo(startPoint.x + 140, startPoint.y - (liftCurrentFloor - 1) * 100);\n  path.lineTo(startPoint.x + 140, startPoint.y - 50 - (liftCurrentFloor - 1) * 100);\n  path.lineTo(startPoint.x + 120, startPoint.y - 50 - (liftCurrentFloor - 1) * 100);\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"#cccccc\";\n  irSensor ? ctx.fillStyle = \"#30A840\" : ctx.fillStyle = \"#666666\";\n  ctx.fillRect(startPoint.x + 120, startPoint.y - 50 - (liftCurrentFloor - 1) * 100, 20, 50);\n  path.closePath();\n  ctx.stroke(path);\n}; // drawing liftStatus (arrow up, down)\n\nexport const drawLiftStatus = (ctx, startPoint, liftCurrentFloor, liftState) => {\n  const path = new Path2D();\n\n  if (liftState === \"up\") {\n    path.moveTo(startPoint.x + 50, startPoint.y - (liftCurrentFloor - 1) * 100 - 50);\n    path.lineTo(startPoint.x + 70, startPoint.y - (liftCurrentFloor - 1) * 100 - 75);\n    path.lineTo(startPoint.x + 90, startPoint.y - (liftCurrentFloor - 1) * 100 - 50);\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#cccccc\";\n    ctx.fillStyle = \"#C22400\";\n    ctx.fill(path);\n    ctx.stroke(path);\n  } else if (liftState === \"down\") {\n    path.moveTo(startPoint.x + 50, startPoint.y - (liftCurrentFloor - 1) * 100);\n    path.lineTo(startPoint.x + 70, startPoint.y - (liftCurrentFloor - 1) * 100 + 25);\n    path.lineTo(startPoint.x + 90, startPoint.y - (liftCurrentFloor - 1) * 100);\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#cccccc\";\n    ctx.fillStyle = \"#250899\";\n    ctx.fill(path);\n    ctx.stroke(path);\n  }\n}; // drawing destination box & text\n\nexport const drawDestinationBox = (ctx, startPoint, liftDestinationFloor) => {\n  const path = new Path2D();\n  path.moveTo(startPoint.x, startPoint.y - 300);\n  path.lineTo(startPoint.x + 140, startPoint.y - 300);\n  path.lineTo(startPoint.x + 140, startPoint.y - 350);\n  path.lineTo(startPoint.x, startPoint.y - 350);\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"#cccccc\";\n  path.closePath();\n  ctx.font = \"16px Arial\";\n  ctx.fillStyle = \"#888888\";\n  ctx.fillText(`Destination: ${liftDestinationFloor}`, startPoint.x + 17, startPoint.y - 319);\n  ctx.stroke(path);\n}; // drawing james\n\nexport const drawJames = (ctx, startPoint) => {\n  const path = new Path2D();\n  path.moveTo(startPoint.x - 96, startPoint.y);\n  path.lineTo(startPoint.x - 20, startPoint.y);\n  path.lineTo(startPoint.x - 20, startPoint.y - 70);\n  path.lineTo(startPoint.x - 96, startPoint.y - 70);\n  path.closePath();\n  ctx.font = \"16px Arial\";\n  ctx.fillStyle = \"#888888\";\n  ctx.stroke(path);\n  ctx.fillText(`James`, startPoint.x - 85, startPoint.y + 20);\n};","map":{"version":3,"sources":["/Users/yh/_project/w_station/w_station_web/src/utils/draw.js"],"names":["drawConveyor","ctx","startPoint","itemStatus","beginPath","map","floor","i","item","j","fillStyle","path","Path2D","fillRect","x","y","moveTo","lineTo","lineWidth","strokeStyle","closePath","stroke","drawElevatorBox","drawLift","liftCurrentFloor","liftItemState","console","log","drawIrSensor","irSensor","drawLiftStatus","liftState","fill","drawDestinationBox","liftDestinationFloor","font","fillText","drawJames"],"mappings":"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","sourcesContent":["// drawing conveyor status (3 * 5)\nexport const drawConveyor = (ctx, startPoint, itemStatus) => {\n    ctx.beginPath();\n    itemStatus.map((floor, i) => {\n        floor.map((item, j) => {\n            item === 0 ? ctx.fillStyle = \"#666666\" : ctx.fillStyle = \"#30A840\";\n            const path = new Path2D();\n            ctx.fillRect(startPoint.x+150+j*85, startPoint.y-50-i*100, 85, 50);\n            path.moveTo(startPoint.x+150+j*85, startPoint.y-i*100);\n            path.lineTo(startPoint.x+235+j*85, startPoint.y-i*100);\n            path.lineTo(startPoint.x+235+j*85, startPoint.y-50-i*100);\n            path.lineTo(startPoint.x+150+j*85, startPoint.y-50-i*100);\n            path.lineTo(startPoint.x+150+j*85, startPoint.y-i*100);\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = \"#cccccc\";\n            path.closePath();\n            ctx.stroke(path);\n        }); \n    })\n}\n\n// drawing elevator box\nexport const drawElevatorBox = (ctx, startPoint) => {\n    ctx.beginPath();\n    const path = new Path2D();\n    path.moveTo(startPoint.x, startPoint.y);\n    path.lineTo(startPoint.x+140, startPoint.y);\n    path.lineTo(startPoint.x+140, startPoint.y-300);\n    path.lineTo(startPoint.x, startPoint.y-300);\n    ctx.strokeStyle = \"#cccccc\";\n    path.closePath();\n    ctx.stroke(path);\n}\n    \n// drawing lift \nexport const drawLift = (ctx, startPoint, liftCurrentFloor, liftItemState) => {\n    const path = new Path2D();\n    path.moveTo(startPoint.x+20, startPoint.y-((liftCurrentFloor-1)*100));\n    path.lineTo(startPoint.x+120, startPoint.y-((liftCurrentFloor-1)*100));\n    path.lineTo(startPoint.x+120, startPoint.y-50-((liftCurrentFloor-1)*100));\n    path.lineTo(startPoint.x+20, startPoint.y-50-((liftCurrentFloor-1)*100));\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#cccccc\";\n    console.log(liftItemState)\n    liftItemState ? ctx.fillStyle = \"#30A840\" : ctx.fillStyle = \"#666666\";\n    // liftItemState === true ? ctx.fillStyle = \"#30A840\" :\n    // liftItemState === false ? ctx.fillStyle = \"#cccccc\" :\n    // liftItemState === \"none\" ? ctx.fillStyle = \"#cccccc\" :\n    ctx.fillRect(startPoint.x+20, startPoint.y-50-((liftCurrentFloor-1)*100), 100, 50);\n    path.closePath();\n    ctx.stroke(path);\n}\n\n// drawing irSensor\nexport const drawIrSensor = (ctx, startPoint, liftCurrentFloor, irSensor) => {\n    const path = new Path2D();\n    path.moveTo(startPoint.x+120, startPoint.y-((liftCurrentFloor-1)*100));\n    path.lineTo(startPoint.x+140, startPoint.y-((liftCurrentFloor-1)*100));\n    path.lineTo(startPoint.x+140, startPoint.y-50-((liftCurrentFloor-1)*100));\n    path.lineTo(startPoint.x+120, startPoint.y-50-((liftCurrentFloor-1)*100));\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#cccccc\";\n    irSensor ? ctx.fillStyle = \"#30A840\" : ctx.fillStyle = \"#666666\";\n    ctx.fillRect(startPoint.x+120, startPoint.y-50-((liftCurrentFloor-1)*100), 20, 50);\n    path.closePath();\n    ctx.stroke(path);\n}\n\n// drawing liftStatus (arrow up, down)\nexport const drawLiftStatus = (ctx, startPoint, liftCurrentFloor, liftState) => {\n    const path = new Path2D();    \n    if(liftState === \"up\") {\n        path.moveTo(startPoint.x+50, startPoint.y-((liftCurrentFloor-1)*100)-50);\n        path.lineTo(startPoint.x+70, startPoint.y-((liftCurrentFloor-1)*100)-75);\n        path.lineTo(startPoint.x+90, startPoint.y-((liftCurrentFloor-1)*100)-50);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = \"#cccccc\";\n        ctx.fillStyle = \"#C22400\";\n        ctx.fill(path);\n        ctx.stroke(path);\n    } else if(liftState === \"down\") {\n        path.moveTo(startPoint.x+50, startPoint.y-((liftCurrentFloor-1)*100));\n        path.lineTo(startPoint.x+70, startPoint.y-((liftCurrentFloor-1)*100)+25);\n        path.lineTo(startPoint.x+90, startPoint.y-((liftCurrentFloor-1)*100));\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = \"#cccccc\";\n        ctx.fillStyle = \"#250899\";\n        ctx.fill(path);\n        ctx.stroke(path);\n    } \n}\n\n// drawing destination box & text\nexport const drawDestinationBox = (ctx, startPoint, liftDestinationFloor) => {\n    const path = new Path2D();\n    path.moveTo(startPoint.x, startPoint.y-300);\n    path.lineTo(startPoint.x+140, startPoint.y-300);\n    path.lineTo(startPoint.x+140, startPoint.y-350);\n    path.lineTo(startPoint.x, startPoint.y-350);\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#cccccc\";\n    path.closePath();\n    ctx.font = \"16px Arial\"\n    ctx.fillStyle = \"#888888\";\n    ctx.fillText(`Destination: ${liftDestinationFloor}`, startPoint.x+17, startPoint.y-319);\n    ctx.stroke(path);\n\n}\n\n// drawing james\nexport const drawJames = (ctx, startPoint) => {\n    const path = new Path2D();\n    path.moveTo(startPoint.x-96, startPoint.y);\n    path.lineTo(startPoint.x-20, startPoint.y);\n    path.lineTo(startPoint.x-20, startPoint.y-70);\n    path.lineTo(startPoint.x-96, startPoint.y-70);\n    path.closePath();\n    ctx.font = \"16px Arial\"\n    ctx.fillStyle = \"#888888\";\n    ctx.stroke(path);\n    ctx.fillText(`James`, startPoint.x-85, startPoint.y+20);\n}\n"]},"metadata":{},"sourceType":"module"}