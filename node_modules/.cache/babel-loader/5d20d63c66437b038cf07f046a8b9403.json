{"ast":null,"code":"import ROSLIB from 'roslib';\nconst WEBSOCKET_ADDRESS = \"ws://0.0.0.0:9090\";\nexport const connectROS = rosWS => {\n  return new Promise(resolve => {\n    if (!rosWS.current) {\n      rosWS.current = new ROSLIB.Ros({\n        url: WEBSOCKET_ADDRESS // socket url\n\n      });\n      rosWS.current.on('connection', function () {\n        console.log('Connected successfully.');\n      });\n      rosWS.current.on('error', function (error) {\n        console.log('Error:', error);\n      });\n      rosWS.current.on('close', function () {\n        console.log('Connection closed.');\n      });\n    }\n\n    const rosObj = {}; // TOPIC Settings\n\n    rosObj.itemStatus = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/wstation/item_status',\n      meesageType: 'std_msgs/Int8MultiArray'\n    });\n    rosObj.liftDestinationFloorTopic = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/wstation/lift_destination_floor',\n      messageType: 'std_msgs/Int8'\n    });\n    rosObj.liftCurrentFloorTopic = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/wstation/lift_current_floor',\n      messageType: 'std_msgs/Int8'\n    });\n    rosObj.pushItemToLiftTopic = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/wstation/push_item',\n      messageType: 'std_msgs/Bool'\n    });\n    rosObj.liftStatusTopic = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/wstation/lift_status',\n      messageType: 'std_msgs/String'\n    });\n    rosObj.liftItemStatusTopic = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/wstation/lift_item_status',\n      messageType: 'std_msgs/Bool'\n    });\n    rosObj.liftItemSizeTopic = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/wstation/lift_item_size',\n      messageType: 'std_msgs/String'\n    });\n    rosObj.SendToDestinationTopic = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/wstation/send_to_destination',\n      messageType: 'std_msgs/String'\n    });\n    rosObj.CameraTopic = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/usb_cam/image_raw',\n      messageType: 'sensor_msgs/Image'\n    });\n    rosObj.EmergencyTopic = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/wstation/emergency',\n      messageType: 'std_msgs/Bool'\n    });\n    rosObj.manualTopic = new ROSLIB.Topic({\n      ros: rosWS.current,\n      name: '/wstation/manual',\n      messageType: 'std_msgs/Bool'\n    });\n    resolve(rosObj);\n  });\n};","map":{"version":3,"sources":["/Users/yh/_project/w_station/w_station_web/src/utils/ros.js"],"names":["ROSLIB","WEBSOCKET_ADDRESS","connectROS","rosWS","Promise","resolve","current","Ros","url","on","console","log","error","rosObj","itemStatus","Topic","ros","name","meesageType","liftDestinationFloorTopic","messageType","liftCurrentFloorTopic","pushItemToLiftTopic","liftStatusTopic","liftItemStatusTopic","liftItemSizeTopic","SendToDestinationTopic","CameraTopic","EmergencyTopic","manualTopic"],"mappings":"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","sourcesContent":["import ROSLIB from 'roslib';\n\nconst WEBSOCKET_ADDRESS = \"ws://0.0.0.0:9090\";\n\nexport const connectROS = (rosWS) => {\n    return new Promise(resolve => {\n        if (!rosWS.current) {\n            rosWS.current = new ROSLIB.Ros({\n                url: WEBSOCKET_ADDRESS // socket url\n            });\n            rosWS.current.on('connection', function() {\n                console.log('Connected successfully.');\n            });\n            rosWS.current.on('error', function (error) {\n                console.log('Error:', error);\n            });\n            rosWS.current.on('close', function () {\n                console.log('Connection closed.');\n            });\n        }\n        const rosObj = {};\n        // TOPIC Settings\n        rosObj.itemStatus = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/wstation/item_status',\n            meesageType: 'std_msgs/Int8MultiArray'\n        });\n        rosObj.liftDestinationFloorTopic = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/wstation/lift_destination_floor',\n            messageType: 'std_msgs/Int8'\n        });\n        rosObj.liftCurrentFloorTopic = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/wstation/lift_current_floor',\n            messageType: 'std_msgs/Int8' \n        });\n        rosObj.pushItemToLiftTopic = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/wstation/push_item',\n            messageType: 'std_msgs/Bool' \n        });\n        rosObj.liftStatusTopic = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/wstation/lift_status',\n            messageType: 'std_msgs/String' \n        });\n        rosObj.liftItemStatusTopic = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/wstation/lift_item_status',\n            messageType: 'std_msgs/Bool' \n        });\n        rosObj.liftItemSizeTopic = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/wstation/lift_item_size',\n            messageType: 'std_msgs/String' \n        });\n        rosObj.SendToDestinationTopic = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/wstation/send_to_destination',\n            messageType: 'std_msgs/String' \n        });\n        rosObj.CameraTopic = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/usb_cam/image_raw',\n            messageType: 'sensor_msgs/Image' \n        });\n        rosObj.EmergencyTopic = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/wstation/emergency',\n            messageType: 'std_msgs/Bool'\n        });\n        rosObj.manualTopic = new ROSLIB.Topic({\n            ros: rosWS.current,\n            name: '/wstation/manual',\n            messageType: 'std_msgs/Bool'\n        });\n        resolve(rosObj);\n    })\n}"]},"metadata":{},"sourceType":"module"}